@using Project.Contracts.Enums
@model BatchesIndexViewModel
@{
    ViewData["Title"] = "Управление партиями";
}

@section Styles {
    <style>
        .batch-card {
            transition: all 0.2s ease-in-out;
            border-left: 4px solid #e9ecef;
        }
        .batch-card:hover {
            box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
            transform: translateY(-2px);
        }
        .batch-card.priority-low { border-left-color: #6c757d; }
        .batch-card.priority-normal { border-left-color: #007bff; }
        .batch-card.priority-high { border-left-color: #ffc107; }
        .batch-card.priority-critical { border-left-color: #dc3545; }
        
        .progress-circle {
            position: relative;
            width: 60px;
            height: 60px;
        }
        .progress-circle svg {
            transform: rotate(-90deg);
        }
        .progress-circle-text {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            font-weight: bold;
            font-size: 0.8rem;
        }
        
        .filter-panel {
            background: #f8f9fa;
            border-radius: 0.5rem;
            padding: 1rem;
            margin-bottom: 1rem;
        }
        
        .action-btn {
            opacity: 0;
            transition: opacity 0.2s;
        }
        .batch-card:hover .action-btn {
            opacity: 1;
        }
        
        .stage-indicator {
            width: 8px;
            height: 8px;
            border-radius: 50%;
            display: inline-block;
            margin-right: 0.25rem;
        }
        .stage-completed { background-color: #28a745; }
        .stage-progress { background-color: #007bff; }
        .stage-queued { background-color: #ffc107; }
        .stage-pending { background-color: #6c757d; }
    </style>
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h1 class="h3 mb-0">
        <i class="bi bi-boxes text-primary"></i>
        Управление партиями
    </h1>
    <div>
        <button class="btn btn-success" data-bs-toggle="modal" data-bs-target="#createBatchModal">
            <i class="bi bi-plus"></i> Создать партию
        </button>
        <button class="btn btn-outline-secondary" data-bs-toggle="collapse" data-bs-target="#filterPanel">
            <i class="bi bi-funnel"></i> Фильтры
        </button>
    </div>
</div>

<!-- Панель фильтров -->
<div class="collapse @(Model.Filter.SearchTerm != "" || Model.Filter.Priority.HasValue ? "show" : "")" id="filterPanel">
    <div class="filter-panel">
        <form method="get" class="row g-3">
            <div class="col-md-4">
                <label class="form-label">Поиск по детали</label>
                <input type="text" class="form-control" name="SearchTerm" value="@Model.Filter.SearchTerm" 
                       placeholder="Название или номер детали">
            </div>
            <div class="col-md-2">
                <label class="form-label">Приоритет</label>
                <select class="form-select" name="Priority">
                    <option value="">Все</option>
                    <option value="Low" selected="@(Model.Filter.Priority == Priority.Low)">Низкий</option>
                    <option value="Normal" selected="@(Model.Filter.Priority == Priority.Normal)">Обычный</option>
                    <option value="High" selected="@(Model.Filter.Priority == Priority.High)">Высокий</option>
                    <option value="Critical" selected="@(Model.Filter.Priority == Priority.Critical)">Критический</option>
                </select>
            </div>
            <div class="col-md-2">
                <label class="form-label">Дата создания с</label>
                <input type="date" class="form-control" name="CreatedFrom" 
                       value="@Model.Filter.CreatedFrom?.ToString("yyyy-MM-dd")">
            </div>
            <div class="col-md-2">
                <label class="form-label">до</label>
                <input type="date" class="form-control" name="CreatedTo" 
                       value="@Model.Filter.CreatedTo?.ToString("yyyy-MM-dd")">
            </div>
            <div class="col-md-2 d-flex align-items-end">
                <button type="submit" class="btn btn-primary me-2">
                    <i class="bi bi-search"></i> Найти
                </button>
                <a href="@Url.Action("Index")" class="btn btn-outline-secondary">
                    <i class="bi bi-x"></i>
                </a>
            </div>
        </form>
        
        <div class="mt-3">
            <div class="form-check form-check-inline">
                <input class="form-check-input" type="checkbox" name="ShowCompleted" 
                       @(Model.Filter.ShowCompleted ? "checked" : "") onchange="this.form.submit()">
                <label class="form-check-label">Завершенные</label>
            </div>
            <div class="form-check form-check-inline">
                <input class="form-check-input" type="checkbox" name="ShowInProgress" 
                       @(Model.Filter.ShowInProgress ? "checked" : "") onchange="this.form.submit()">
                <label class="form-check-label">В работе</label>
            </div>
            <div class="form-check form-check-inline">
                <input class="form-check-input" type="checkbox" name="ShowPending" 
                       @(Model.Filter.ShowPending ? "checked" : "") onchange="this.form.submit()">
                <label class="form-check-label">Ожидающие</label>
            </div>
        </div>
    </div>
</div>

<!-- Список партий -->
@if (Model.Batches.Any())
{
    <div class="row">
        @foreach (var batch in Model.Batches)
        {
            <div class="col-xl-4 col-lg-6 mb-3">
                <div class="card batch-card priority-@batch.Priority.ToString().ToLower() h-100">
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-start mb-3">
                            <div class="flex-grow-1">
                                <h6 class="card-title mb-1">@batch.DetailName</h6>
                                <small class="text-muted">@batch.DetailNumber</small>
                            </div>
                            <div class="dropdown action-btn">
                                <button class="btn btn-sm btn-outline-secondary" data-bs-toggle="dropdown">
                                    <i class="bi bi-three-dots"></i>
                                </button>
                                <ul class="dropdown-menu">
                                    <li>
                                        <a class="dropdown-item" href="javascript:void(0)" 
                                           onclick="viewBatchDetails(@batch.Id)">
                                            <i class="bi bi-eye"></i> Подробнее
                                        </a>
                                    </li>
                                    @if (batch.CanEdit)
                                    {
                                        <li>
                                            <a class="dropdown-item" href="javascript:void(0)" 
                                               onclick="scheduleBatch(@batch.Id)">
                                                <i class="bi bi-calendar-plus"></i> Планировать
                                            </a>
                                        </li>
                                    }
                                    <li>
                                        <a class="dropdown-item" href="javascript:void(0)" 
                                           onclick="exportBatch(@batch.Id)">
                                            <i class="bi bi-download"></i> Экспорт
                                        </a>
                                    </li>
                                    @if (batch.CanDelete)
                                    {
                                        <li><hr class="dropdown-divider"></li>
                                        <li>
                                            <a class="dropdown-item text-danger" href="javascript:void(0)" 
                                               onclick="deleteBatch(@batch.Id, '@batch.DetailName')">
                                                <i class="bi bi-trash"></i> Удалить
                                            </a>
                                        </li>
                                    }
                                </ul>
                            </div>
                        </div>

                        <div class="d-flex align-items-center mb-3">
                            <div class="progress-circle me-3">
                                <svg width="60" height="60">
                                    <circle cx="30" cy="30" r="25" fill="none" stroke="#e9ecef" stroke-width="4"/>
                                    <circle cx="30" cy="30" r="25" fill="none" stroke="#28a745" stroke-width="4"
                                            stroke-dasharray="@(157 * batch.CompletionPercentage / 100) 157"/>
                                </svg>
                                <div class="progress-circle-text">@batch.CompletionPercentage%</div>
                            </div>
                            <div class="flex-grow-1">
                                <div class="d-flex justify-content-between mb-1">
                                    <span>Количество:</span>
                                    <strong>@batch.Quantity шт</strong>
                                </div>
                                <div class="d-flex justify-content-between mb-1">
                                    <span>Приоритет:</span>
                                    <span class="badge bg-@batch.PriorityBadgeClass">
                                        @batch.PriorityDisplayName
                                    </span>
                                </div>
                                <div class="d-flex justify-content-between">
                                    <span>Статус:</span>
                                    <strong>@batch.CompletionStatusText</strong>
                                </div>
                            </div>
                        </div>

                        <div class="row text-center mb-3">
                            <div class="col-3">
                                <div class="text-success">
                                    <small>Завершено</small>
                                    <div class="fw-bold">@batch.CompletedStages</div>
                                </div>
                            </div>
                            <div class="col-3">
                                <div class="text-primary">
                                    <small>В работе</small>
                                    <div class="fw-bold">@batch.InProgressStages</div>
                                </div>
                            </div>
                            <div class="col-3">
                                <div class="text-warning">
                                    <small>В очереди</small>
                                    <div class="fw-bold">@batch.QueuedStages</div>
                                </div>
                            </div>
                            <div class="col-3">
                                <div class="text-muted">
                                    <small>Всего</small>
                                    <div class="fw-bold">@batch.TotalStages</div>
                                </div>
                            </div>
                        </div>

                        <div class="d-flex justify-content-between align-items-center">
                            <small class="text-muted">
                                <i class="bi bi-calendar"></i>
                                @batch.CreatedUtc.ToString("dd.MM.yyyy HH:mm")
                            </small>
                            @if (batch.EstimatedCompletionTimeUtc.HasValue)
                            {
                                <small class="text-muted">
                                    <i class="bi bi-clock"></i>
                                    @batch.EstimatedCompletionTimeUtc.Value.ToString("dd.MM HH:mm")
                                </small>
                            }
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

    <!-- Пагинация -->
    @if (Model.Pagination.TotalPages > 1)
    {
        <nav class="mt-4">
            <ul class="pagination justify-content-center">
                @if (Model.Pagination.HasPreviousPage)
                {
                    <li class="page-item">
                        <a class="page-link" href="?page=@(Model.Pagination.CurrentPage - 1)">
                            <i class="bi bi-chevron-left"></i>
                        </a>
                    </li>
                }

                @for (int i = Math.Max(1, Model.Pagination.CurrentPage - 2); 
                      i <= Math.Min(Model.Pagination.TotalPages, Model.Pagination.CurrentPage + 2); 
                      i++)
                {
                    <li class="page-item @(i == Model.Pagination.CurrentPage ? "active" : "")">
                        <a class="page-link" href="?page=@i">@i</a>
                    </li>
                }

                @if (Model.Pagination.HasNextPage)
                {
                    <li class="page-item">
                        <a class="page-link" href="?page=@(Model.Pagination.CurrentPage + 1)">
                            <i class="bi bi-chevron-right"></i>
                        </a>
                    </li>
                }
            </ul>
        </nav>
    }
}
else
{
    <div class="text-center py-5">
        <i class="bi bi-inbox display-1 text-muted"></i>
        <h3 class="mt-3">Партии не найдены</h3>
        <p class="text-muted">Создайте новую партию или измените фильтры поиска</p>
        <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#createBatchModal">
            <i class="bi bi-plus"></i> Создать первую партию
        </button>
    </div>
}

<!-- Модальное окно создания партии -->
<div class="modal fade" id="createBatchModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">
                    <i class="bi bi-plus-circle"></i>
                    Создать новую партию
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <form id="createBatchForm">
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label class="form-label">Деталь *</label>
                                <select class="form-select" name="DetailId" required>
                                    <option value="">Выберите деталь...</option>
                                </select>
                                <div class="form-text">Выберите деталь для изготовления</div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label class="form-label">Количество *</label>
                                <input type="number" class="form-control" name="Quantity" min="1" value="1" required>
                                <div class="form-text">Количество деталей в партии</div>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label class="form-label">Приоритет</label>
                                <select class="form-select" name="Priority">
                                    <option value="Low">Низкий</option>
                                    <option value="Normal" selected>Обычный</option>
                                    <option value="High">Высокий</option>
                                    <option value="Critical">Критический</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <div class="form-check mt-4">
                                    <input class="form-check-input" type="checkbox" name="AutoStartPlanning" checked>
                                    <label class="form-check-label">
                                        Автоматически запустить планирование
                                    </label>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="card bg-light">
                        <div class="card-body">
                            <div class="form-check mb-3">
                                <input class="form-check-input" type="checkbox" id="splitIntoBatches" name="SplitIntoBatches">
                                <label class="form-check-label" for="splitIntoBatches">
                                    <strong>Разделить на подпартии</strong>
                                </label>
                            </div>
                            <div id="subBatchOptions" style="display: none;">
                                <div class="mb-3">
                                    <label class="form-label">Количество деталей в подпартии</label>
                                    <input type="number" class="form-control" name="SubBatchSize" min="1">
                                    <div class="form-text">Оставьте пустым для автоматического расчета</div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div id="batchPreview" style="display: none;">
                        <hr>
                        <h6>Предварительный расчет:</h6>
                        <div class="row text-center">
                            <div class="col-4">
                                <div class="text-muted">Время изготовления</div>
                                <div class="fw-bold" id="estimatedTime">—</div>
                            </div>
                            <div class="col-4">
                                <div class="text-muted">Подпартий</div>
                                <div class="fw-bold" id="subBatchCount">—</div>
                            </div>
                            <div class="col-4">
                                <div class="text-muted">Завершение</div>
                                <div class="fw-bold" id="completionDate">—</div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Отмена</button>
                    <button type="submit" class="btn btn-primary">
                        <i class="bi bi-check"></i> Создать партию
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Модальное окно деталей партии -->
<div class="modal fade" id="batchDetailsModal" tabindex="-1">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Детали партии</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body" id="batchDetailsContent">
                <!-- Содержимое загружается динамически -->
            </div>
        </div>
    </div>
</div>

<!-- Модальное окно подтверждения удаления -->
<div class="modal fade" id="deleteBatchModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title text-danger">
                    <i class="bi bi-exclamation-triangle"></i>
                    Подтверждение удаления
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p>Вы действительно хотите удалить партию <strong id="deleteBatchName"></strong>?</p>
                <p class="text-muted">Это действие нельзя отменить.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Отмена</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteBtn">
                    <i class="bi bi-trash"></i> Удалить
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let deleteTargetId = null;

        // Управление разделением на подпартии
        document.getElementById('splitIntoBatches').addEventListener('change', function() {
            const options = document.getElementById('subBatchOptions');
            options.style.display = this.checked ? 'block' : 'none';
        });

        // Создание партии
        document.getElementById('createBatchForm').addEventListener('submit', function(e) {
            e.preventDefault();
            
            const formData = new FormData(this);
            const submitBtn = this.querySelector('button[type="submit"]');
            const originalText = submitBtn.innerHTML;
            
            submitBtn.disabled = true;
            submitBtn.innerHTML = '<span class="spinner-border spinner-border-sm me-2"></span>Создание...';
            
            fetch('@Url.Action("Create")', {
                method: 'POST',
                body: formData
            })
            .then(response => {
                if (response.ok) {
                    return response.json();
                }
                throw new Error('Ошибка создания партии');
            })
            .then(data => {
                if (data.success) {
                    $('#createBatchModal').modal('hide');
                    showToast('Партия успешно создана', 'success');
                    location.reload();
                } else {
                    throw new Error(data.message || 'Ошибка создания партии');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                showToast(error.message, 'error');
            })
            .finally(() => {
                submitBtn.disabled = false;
                submitBtn.innerHTML = originalText;
            });
        });

        function viewBatchDetails(id) {
            fetch(`@Url.Action("Details")/${id}`)
                .then(response => response.text())
                .then(html => {
                    document.getElementById('batchDetailsContent').innerHTML = html;
                    $('#batchDetailsModal').modal('show');
                })
                .catch(error => {
                    console.error('Error:', error);
                    showToast('Ошибка загрузки деталей', 'error');
                });
        }

        function scheduleBatch(id) {
            if (confirm('Запустить автоматическое планирование для этой партии?')) {
                fetch('@Url.Action("AutoSchedule", "Planning")', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ batchId: id })
                })
                .then(response => {
                    if (response.ok) {
                        showToast('Планирование запущено', 'success');
                        location.reload();
                    } else {
                        throw new Error('Ошибка планирования');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    showToast('Ошибка планирования', 'error');
                });
            }
        }

        function exportBatch(id) {
            window.open(`@Url.Action("Export")/${id}`, '_blank');
        }

        function deleteBatch(id, name) {
            deleteTargetId = id;
            document.getElementById('deleteBatchName').textContent = name;
            $('#deleteBatchModal').modal('show');
        }

        document.getElementById('confirmDeleteBtn').addEventListener('click', function() {
            if (deleteTargetId) {
                fetch('@Url.Action("Delete")', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ id: deleteTargetId })
                })
                .then(response => {
                    if (response.ok) {
                        $('#deleteBatchModal').modal('hide');
                        showToast('Партия удалена', 'success');
                        location.reload();
                    } else {
                        throw new Error('Ошибка удаления');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    showToast('Ошибка удаления партии', 'error');
                });
            }
        });

        function showToast(message, type = 'info') {
            // Простая реализация уведомлений
            const alertClass = type === 'success' ? 'alert-success' : 
                              type === 'error' ? 'alert-danger' : 'alert-info';
            
            const toast = document.createElement('div');
            toast.className = `alert ${alertClass} alert-dismissible fade show position-fixed`;
            toast.style.cssText = 'top: 20px; right: 20px; z-index: 9999; min-width: 300px;';
            toast.innerHTML = `
                ${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            `;
            
            document.body.appendChild(toast);
            
            setTimeout(() => {
                if (toast.parentNode) {
                    toast.parentNode.removeChild(toast);
                }
            }, 5000);
        }

        // Загрузка деталей при открытии модального окна
        document.getElementById('createBatchModal').addEventListener('show.bs.modal', function() {
            const select = this.querySelector('select[name="DetailId"]');
            if (select.children.length === 1) { // Только option "Выберите деталь..."
                fetch('@Url.Action("GetDetailsForBatch", "Details")')
                    .then(response => response.json())
                    .then(data => {
                        data.forEach(detail => {
                            const option = document.createElement('option');
                            option.value = detail.id;
                            option.textContent = detail.text;
                            option.dataset.hasRoute = detail.hasRoute;
                            option.dataset.estimatedDuration = detail.estimatedDuration || 0;
                            select.appendChild(option);
                        });
                    })
                    .catch(error => {
                        console.error('Error loading details:', error);
                    });
            }
        });

        // Предварительный расчет при изменении параметров
        function updateBatchPreview() {
            const detailSelect = document.querySelector('select[name="DetailId"]');
            const quantityInput = document.querySelector('input[name="Quantity"]');
            
            if (detailSelect.value && quantityInput.value) {
                const selectedOption = detailSelect.selectedOptions[0];
                const estimatedDuration = parseFloat(selectedOption.dataset.estimatedDuration || 0);
                const quantity = parseInt(quantityInput.value);
                
                if (estimatedDuration > 0) {
                    const totalHours = estimatedDuration * quantity;
                    const completionDate = new Date();
                    completionDate.setHours(completionDate.getHours() + totalHours);
                    
                    document.getElementById('estimatedTime').textContent = `${totalHours.toFixed(1)} ч`;
                    document.getElementById('completionDate').textContent = completionDate.toLocaleDateString();
                    document.getElementById('batchPreview').style.display = 'block';
                } else {
                    document.getElementById('batchPreview').style.display = 'none';
                }
            } else {
                document.getElementById('batchPreview').style.display = 'none';
            }
        }

        // Привязка событий для предварительного расчета
        document.querySelector('select[name="DetailId"]').addEventListener('change', updateBatchPreview);
        document.querySelector('input[name="Quantity"]').addEventListener('input', updateBatchPreview);
    </script>
}