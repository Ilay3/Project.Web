@model ReportsIndexViewModel
@{
    ViewData["Title"] = "Отчеты и аналитика";
}
@Html.AntiForgeryToken()
<div class="d-flex justify-content-between align-items-center mb-4">
    <h1 class="h3">
        <i class="bi bi-graph-up"></i> Отчеты и аналитика
    </h1>
</div>

<div class="row">
    @foreach (var category in Model.Categories)
    {
        <div class="col-lg-4 mb-4">
            <div class="card h-100">
                <div class="card-header">
                    <h5 class="mb-0">@category.Name</h5>
                    <small class="text-muted">@category.Description</small>
                </div>
                <div class="card-body">
                    <div class="list-group list-group-flush">
                        @foreach (var report in category.Reports)
                        {
                            <a href="@report.Url" class="list-group-item list-group-item-action">
                                <div class="d-flex align-items-center">
                                    <i class="@report.Icon me-3 text-primary"></i>
                                    <div>
                                        <h6 class="mb-1">@report.Name</h6>
                                        <small class="text-muted">@report.Description</small>
                                    </div>
                                </div>
                            </a>
                        }
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<!-- Быстрые отчеты -->
<div class="card mt-4">
    <div class="card-header">
        <h5 class="mb-0">Быстрые отчеты</h5>
    </div>
    <div class="card-body">
        <div class="row">
            <div class="col-md-3 mb-3">
                <button class="btn btn-outline-primary w-100" onclick="generateQuickReport('today')">
                    <i class="bi bi-calendar-day"></i><br>
                    Отчет за сегодня
                </button>
            </div>
            <div class="col-md-3 mb-3">
                <button class="btn btn-outline-primary w-100" onclick="generateQuickReport('week')">
                    <i class="bi bi-calendar-week"></i><br>
                    Отчет за неделю
                </button>
            </div>
            <div class="col-md-3 mb-3">
                <button class="btn btn-outline-primary w-100" onclick="generateQuickReport('month')">
                    <i class="bi bi-calendar-month"></i><br>
                    Отчет за месяц
                </button>
            </div>
            <div class="col-md-3 mb-3">
                <button class="btn btn-outline-primary w-100" data-bs-toggle="modal" data-bs-target="#customReportModal">
                    <i class="bi bi-gear"></i><br>
                    Настраиваемый отчет
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Модальное окно настраиваемого отчета -->
<div class="modal fade" id="customReportModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Настраиваемый отчет</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <form id="customReportForm">
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label class="form-label">Тип отчета</label>
                                <select class="form-select" name="reportType" required>
                                    <option value="">Выберите тип отчета...</option>
                                    <option value="productivity">Производительность</option>
                                    <option value="utilization">Загрузка станков</option>
                                    <option value="batches">Сводка по партиям</option>
                                    <option value="details">Статистика по деталям</option>
                                    <option value="setup">Анализ переналадок</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label class="form-label">Формат</label>
                                <select class="form-select" name="format">
                                    <option value="HTML">HTML (просмотр)</option>
                                    <option value="PDF">PDF</option>
                                    <option value="EXCEL">Excel</option>
                                    <option value="CSV">CSV</option>
                                </select>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label class="form-label">Дата начала</label>
                                <input type="date" class="form-control" name="startDate" required>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label class="form-label">Дата окончания</label>
                                <input type="date" class="form-control" name="endDate" required>
                            </div>
                        </div>
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Фильтры</label>
                        <div class="row">
                            <div class="col-md-4">
                                <label class="form-label">Станки</label>
                                <select class="form-select" name="machineIds" multiple>
                                    <option value="">Все станки</option>
                                </select>
                            </div>
                            <div class="col-md-4">
                                <label class="form-label">Детали</label>
                                <select class="form-select" name="detailIds" multiple>
                                    <option value="">Все детали</option>
                                </select>
                            </div>
                            <div class="col-md-4">
                                <label class="form-label">Операторы</label>
                                <select class="form-select" name="operatorIds" multiple>
                                    <option value="">Все операторы</option>
                                </select>
                            </div>
                        </div>
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Дополнительные параметры</label>
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" name="includeSetups">
                            <label class="form-check-label">Включить переналадки</label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" name="includeOverdue">
                            <label class="form-check-label">Включить просроченные</label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" name="groupByDay">
                            <label class="form-check-label">Группировать по дням</label>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Отмена</button>
                    <button type="submit" class="btn btn-primary">Сформировать отчет</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function generateQuickReport(period) {
            const today = new Date();
            let startDate, endDate = today.toISOString().split('T')[0];

            switch(period) {
                case 'today':
                    startDate = endDate;
                    break;
                case 'week':
                    const weekAgo = new Date(today);
                    weekAgo.setDate(today.getDate() - 7);
                    startDate = weekAgo.toISOString().split('T')[0];
                    break;
                case 'month':
                    const monthAgo = new Date(today);
                    monthAgo.setMonth(today.getMonth() - 1);
                    startDate = monthAgo.toISOString().split('T')[0];
                    break;
            }

            const url = `@Url.Action("Productivity")?startDate=${startDate}&endDate=${endDate}`;
            window.open(url, '_blank');
        }

        document.getElementById('customReportForm').addEventListener('submit', function(e) {
            e.preventDefault();

            const formData = new FormData(this);
            const reportType = formData.get('reportType');
            const format = formData.get('format');

            if (!reportType) {
                alert('Выберите тип отчета');
                return;
            }

            let url = '';
            switch(reportType) {
                case 'productivity':
                    url = '@Url.Action("Productivity")';
                    break;
                case 'utilization':
                    url = '@Url.Action("MachineUtilization")';
                    break;
                case 'batches':
                    url = '@Url.Action("BatchSummary")';
                    break;
                case 'details':
                    url = '@Url.Action("DetailStatistics")';
                    break;
                case 'setup':
                    url = '@Url.Action("SetupAnalysis")';
                    break;
            }

            // Добавляем параметры к URL
            const params = new URLSearchParams();
            for (const [key, value] of formData) {
                if (value) params.append(key, value);
            }

            if (format === 'HTML') {
                window.open(`${url}?${params.toString()}`, '_blank');
            } else {
                // Для других форматов отправляем POST запрос
                fetch('@Url.Action("ExportReport")', {
                    method: 'POST',
                    body: formData
                }).then(response => response.blob())
                .then(blob => {
                    const url = window.URL.createObjectURL(blob);
                    const a = document.createElement('a');
                    a.href = url;
                    a.download = `report_${reportType}_${new Date().toISOString().slice(0,10)}.${format.toLowerCase()}`;
                    a.click();
                });
            }

            $('#customReportModal').modal('hide');
        });

        // Загрузка данных для фильтров при открытии модального окна
        document.getElementById('customReportModal').addEventListener('show.bs.modal', function() {
            const today = new Date();
            const weekAgo = new Date(today);
            weekAgo.setDate(today.getDate() - 7);

            // Устанавливаем даты по умолчанию
            this.querySelector('input[name="startDate"]').value = weekAgo.toISOString().split('T')[0];
            this.querySelector('input[name="endDate"]').value = today.toISOString().split('T')[0];

            // Загружаем станки
            fetch('@Url.Action("Search", "Machines")?term=')
                .then(response => response.json())
                .then(data => {
                    const select = this.querySelector('select[name="machineIds"]');
                    data.forEach(machine => {
                        const option = document.createElement('option');
                        option.value = machine.id;
                        option.textContent = machine.text;
                        select.appendChild(option);
                    });
                });

            // Загружаем детали
            fetch('@Url.Action("Search", "Details")?term=')
                .then(response => response.json())
                .then(data => {
                    const select = this.querySelector('select[name="detailIds"]');
                    data.forEach(detail => {
                        const option = document.createElement('option');
                        option.value = detail.id;
                        option.textContent = detail.text;
                        select.appendChild(option);
                    });
                });
        });
    </script>
}